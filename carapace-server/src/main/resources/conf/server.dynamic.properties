# example configuration, to be loaded with API

listener.1.host=0.0.0.0
listener.1.port=8089
listener.1.ssl=false
listener.1.enabled=true

# this is the fallback certificate
certificate.1.hostname=*
certificate.1.file=conf/localhost.p12
certificate.1.password=testproxy

# example of a Dynamic certificate
#certificate.100.hostname=mypublicdnsname.mycompany.com
#certificate.100.mode=acme

listener.2.host=0.0.0.0
listener.2.port=4089
listener.2.ssl=true
listener.2.ocsp=true
listener.2.enabled=true
listener.2.defaultcertificate=*

filter.1.type=add-x-forwarded-for

filter.2.type=match-user-regexp
filter.2.param=trsid
filter.2.regexp=([\\w\\d]+)([*])

backend.1.id=localhost:8086
backend.1.host=localhost
backend.1.port=8086
backend.1.enabled=true
# Setting a blank probePath will disable the probe check (status result will be mocked to always true)
backend.1.probePath=/tomcatstatus/up

# default director
director.1.id=*
director.1.backends=*
director.1.enabled=true

# default actions:
# not-found: static 404 classpath:/default-error-pages/404_notfound.html
# internal-error: static 500 classpath:/default-error-pages/500_internalservererrord.html
# proxy-all: proxy, director '*'
# cache-if-possible: cache, director '*'

route.100.id=default
route.100.enabled=true
route.100.match=all
#route.1.action=proxy-all
route.100.action=cache-if-possible

default.action.notfound=not-found
default.action.internalerror=internal-error



# Health Manager
# probe checker period, in seconds
healthmanager.period=30

# Dynamic Certificates Manager
# execution period, in seconds
dynamiccertificatesmanager.period=30
# public/private keys size for generated certificates, in bytes (default 2048)
#dynamiccertificatesmanager.keypairssize=


# Max Connections for backend
connectionsmanager.maxconnectionsperendpoint=10
# Max Idle time
connectionsmanager.idletimeout=300000
# Max time to establish a connection to a backend
connectionsmanager.connecttimeout=10000
# Max time to get a valid connection
connectionsmanager.borrowtimeout=60000
# Max Idle time for a request, after this timeout the request will be considered 'stuck' and the backend 'unreachable'
connectionsmanager.stuckrequesttimeout=300000

# Force director (valid only if the matched route mapps to a 'proxy' or 'cache' action)
mapper.forcedirector.parameter=x-director
# Force backend (valid only if the matched route mapps to a 'proxy' or 'cache' action)
mapper.forcebackend.parameter=x-backend

# Maximum cache size in bytes (0 for unlimited). Note: the cache occupation calculus is just an approximation.
cache.maxsize=104857600
# Does not cache objects with size greater than this parameter (0 for caching everything)
cache.maxfilesize=1048576

# Access log file path
accesslog.path=access.log
# Access log timestamp format
accesslog.format.timestamp=yyyy-MM-dd HH:mm:ss.SSS
# Access log row format. Allowed placeholders:
# - <client_ip>: client ip address
# - <server_ip>: local httpproxy listener
# - <method>: http method
# - <host>: host header of the http request
# - <uri>: uri requested in the http request
# - <timestamp>: when httpproxy started to serving the request
# - <backend_time>: milliseconds from request start to the first byte received from the backend
# - <total_time>: milliseconds from request start to the last byte sended to client (tcp delays are not counted)
# - <action_id>: action id (PROXY, CACHE, ...)
# - <route_id>: id of the route used for selecting action and backend
# - <backend_id>: id (host+port) of the backend to which the request was forwarded
# - <user_id>: user id inferred by filters
# - <session_id>: session id inferred by filters
accesslog.format=[<timestamp>] [<method> <host> <uri>] [uid:<user_id>, sid:<session_id>, ip:<client_ip>] server=<server_ip>, act=<action_id>, route=<route_id>, backend=<backend_id>. time t=<total_time>ms b=<backend_time>ms. tls-protocol=<tls_protocol>, cipher-suite=<tls_cipher_suite>
# Access log thread writer internal queue size. If the size is exceeded, entries are discarded. This should happen only
# when access log file is not writable for some reason
accesslog.queue.maxcapacity=2000
# Access log internal buffers flush frequency
accesslog.flush.interval=5000
# Wait time after an I/O failure on writing access log file before trying to re-open it
accesslog.failure.wait=10000
